#!/usr/bin/env python3
from vitruvius.shared import ProcFile
from time import sleep
from collections import deque

# settings
MEAN_HISTORY = 30
UPDATE_DELAY = 6
Q_LENGTH = MEAN_HISTORY // UPDATE_DELAY

# global objects
_charge_now = ProcFile("/sys/class/power_supply/BAT0/charge_now")
_charge_full = ProcFile("/sys/class/power_supply/BAT0/charge_full")
max = int(_charge_full.read()) / 1000

# helpers
current = lambda: int(_charge_now.read()) / 1000
percent = lambda: current() / max * 100

# loop setup
last = current()
q = deque()
total = 1

while True:
    print("{:.1f}%".format(percent()), end=' ')

    now = current()
    diff = last - now
    q.append(diff)
    total += diff
    if len(q) == (Q_LENGTH):
        first = q.popleft()
        total -= first
    last = now

    if diff < 0:
        now = (max - now) * -1
    time_left = now / (total / len(q)) * UPDATE_DELAY
    print("{} minutes remaining".format(time_left / 60))

    sleep(UPDATE_DELAY)
