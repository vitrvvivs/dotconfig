" System Plugins
" vim-plug
" vim-youcompleteme-git

" Vim-plug
call plug#begin('~/.config/vim/plugged')
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'pangloss/vim-javascript'
Plug 'airblade/vim-gitgutter'
Plug 'kchmck/vim-coffee-script'
Plug 'Konfekt/FastFold'
Plug 'tmhedberg/SimpylFold'
Plug 'kopischke/vim-stay'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'chriskempson/base16-vim'
Plug 'jeetsukumaran/vim-indentwise'
Plug 'AndrewRadev/linediff.vim'
Plug 'shawncplus/phpcomplete.vim'
Plug 'chaoren/vim-wordmotion'
Plug 'vim-syntastic/syntastic'
Plug 'tpope/vim-fugitive'
Plug 'jeetsukumaran/vim-indentwise'
Plug 'davidhalter/jedi-vim'
Plug 'pearofducks/ansible-vim'
call plug#end()

" Vim
set number
set hidden
set hlsearch
set viewoptions=cursor,folds,slash,unix

" YCM
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_global_ycm_extra_conf = '/usr/share/vim/vimfiles/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0
let g:ycm_server_python_interpreter = '/usr/bin/python3'
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_goto_buffer_command = 'same-buffer'
if !empty($VIRTUAL_ENV)
  let g:ycm_python_binary_path = $VIRTUAL_ENV.'/bin/python'
elseif !empty($PYTHON)
  let g:ycm_python_binary_path = $PYTHON
else
  let g:ycm_python_binary_path = '/usr/bin/python3'
endif

" jedi-vim, for what YCM can't do
" let g:ycm_use_ultisnips_completer = 1
" let g:ycm_seed_identifiers_with_syntax = 1

let g:jedi#auto_initialization = 1
let g:jedi#completions_enabled = 0
let g:jedi#auto_vim_configuration = 0
let g:jedi#smart_auto_mappings = 0
let g:jedi#popup_on_dot = 0
let g:jedi#completions_command = ""
let g:jedi#show_call_signatures = "1"
let g:jedi#show_call_signatures_delay = 0

" syntastic
let g:syntastic_python_checkers = ['flake8', 'pylint']
let g:syntastic_python_flake8_args = '--max-line-length=120 --ignore=F403,F405,W503'
let g:syntastic_python_pylint_args = '--max-line-length=120 --disable=C0103,C0111,W0621,W503'
let g:syntastic_always_populate_loc_list = 1

" gitgutter
let g:updatetime = 200

" NERDTree
let g:NERDTreeDirArrowExpandable = ''
let g:NERDTreeDirArrowCollapsible = ''

" airline
let g:airline_powerline_fonts = 1
let g:airline_exclude_preview = 1
let g:airline_theme='base16_vim'
let g:base16colorspace=256
function! AirlineThemePatch(palette)
  if g:airline_theme == 'base16_vim'
    let a:palette.normal.airline_a = [ '', '', 18, 02 ]| " darken "NORMAL" to be legible
    let a:palette.normal.airline_z = [ '', '', 19, 02 ]
  endif
endfunction
let g:airline_theme_patch_func = 'AirlineThemePatch'
let g:airline#extensions#cursormode#enabled = 0
let g:airline#extensions#syntastic#enabled = 1

" other colors
hi Folded ctermbg=18
hi DiffAdd cterm=bold ctermbg=02 ctermfg=18
hi DiffDelete cterm=bold ctermbg=01 ctermfg=18
hi DiffChange ctermbg=18
hi DiffText cterm=bold ctermbg=18 ctermfg=03

" ctrlp
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
" allow spaces
let g:ctrlp_regexp = 1
let g:ctrlp_abbrev = {
\ 'gmode': 'i',
\ 'abbrevs': [
  \ {
    \ 'pattern': '\(^@.\+\|\\\@<!:.\+\)\@<! ',
    \ 'expanded': '.*',
    \ 'mode': 'prfz',
  \ },
\ ]
\ }

" Keybinds
map <F1> <Esc>
imap <F1> <Esc>
nmap ; :
nmap Y y$
nnoremap # :YcmCompleter GoTo<CR>
nnoremap gUT :s/\<\(\w\)\(\S*\)/\u\1\L\2/g<CR>| " title case current line
nmap <silent> <Space> :nohlsearch<CR>


" Language-specific (spacing and folding)
autocmd FileType html,htmldjango,css,json,yaml,javascript
      \ setlocal shiftwidth=2 tabstop=2 expandtab

autocmd FileType sh,zsh,python,coffee,php
      \ setlocal shiftwidth=4 tabstop=4 expandtab

autocmd FileType json,coffee,php
      \ set foldmethod=indent
